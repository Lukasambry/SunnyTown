version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
    networks:
      - public
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  web:
    image: nginx:alpine
    volumes:
      - ./dist:/usr/share/nginx/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`sunnytown-prod.florddev.fr`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=80"

  app:
    image: sunnytown-app:latest
    networks:
      - internal
    environment:
      - DB_HOST=db
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`api.sunnytown-prod.florddev.fr`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=80"

  db:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - internal

networks:
  public:
    driver: bridge
  internal:
    driver: bridge
    internal: true

volumes:
  db-data:
